<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="behave-regression">

	<title>Layout Regression Tests</title>
	<para>
		This chapter presents feature that allow layout comparison among different browser from stories developed in dbehave projects.
		<warning>
			<para>
				This feature will be avaiblable from dbhave version <citetitle>1.5.0</citetitle>.
			</para>
		</warning>
	</para>
	<section>
		<title>Concept</title>
		<para>
			Main idea of feature is allowing that project team have a visibility, by means of images and numbers, of design differences among several browsers that are, or will be, supported by system.  
		</para>		
		<para>
			Navigation process through system must be made by dbhave stories, that sometimes already exist, and from images captured during process generate a report at end  of test, comparing selected browsers with one that must be reference browser.
		</para>
	</section>
	<section>
		<title>Requirements</title>
		<para>
			For layout regression test works correctly some technologies are necessary during process, which are: 
		</para>
		
		<section>
			<title>Java</title>
			<para>
				It is necessary to have Java (JDK) installed for process works, commonly machines that runs with dbehave already have needed version.

				For checking if JDK is correctly installed run following command:		
			</para>
			<programlisting>java -version</programlisting>
			<para>Output must be like this:</para>
			<programlisting>java version "1.6.0_35"
OpenJDK Runtime Environment (IcedTea6 1.13.7) (6b35-1.13.7-1ubuntu0.12.04.2)
OpenJDK Server VM (build 23.25-b01, mixed mode)</programlisting>
		</section>	
		
		<section>
			<title>Image Magick</title>
			<para>
				For layout comparison process works correctly is necessary that library Image Magick (http://www.imagemagick.org) be installed.

				Installation of that library in many Linux distributions, like Ubuntu 12.04, can be made by following command:	
			</para>
			<programlisting>sudo apt-get install imagemagick</programlisting>
			<para>After installing access Prompt/Terminal of computer that will run tests and execute following command:</para>
			<programlisting>compare --version</programlisting>
			<para>Result must be something like following text:</para>
			<programlisting>Version: ImageMagick 6.9.0-0 Q16 i686 2014-11-24 http://www.imagemagick.org
Copyright: Copyright (C) 1999-2014 ImageMagick Studio LLC
Features: DPC OpenMP
Delegates (built-in): png x zlib</programlisting>
		</section>	
		
		<section>
			<title>Dbehave project</title>
			<para>
				Regression test has as initial requirement a created dbehave project, case you don't have created one it is enough to follow <ulink url="http://demoiselle.sourceforge.net/docs/components/behave/reference/lastversion/html/behave-quickstart.html">Quickstart</ulink> from dbehave handbook. 				
			</para>			
		</section>		
		
		<section>
			<title>Maven</title>
			<para>
				For test runs correctly is necessary that machine have Maven installed, for knowing if it is correctly working run following command in prompt/terminal:	
			</para>	
			<programlisting>mvn --version</programlisting>
			<para>Output must ve something like following:</para>
			<programlisting>Apache Maven 2.2.1 (rdebian-8)
Java version: 1.6.0_33
Java home: /usr/lib/jvm/java-6-serpro-1.6.0.33/jre
Default locale: pt_BR, platform encoding: UTF-8
OS name: "linux" version: "3.2.0-58-generic-pae" arch: "i386" Family: "unix"</programlisting>
		</section>	
	</section>	
	<section>
		<title>dbehave project configuration</title>
		<para>
			This session describe how dbehave project must be configured for regression test runs.
		</para>	
		
		<section>
			<title>Basic Configurations of pom.xml</title>
			<para>
			This feature has basically 2 occurrences in pom.xml:
			<itemizedlist>
				<listitem>1. Custom steps to capture screens to be compared</listitem>
				<listitem>2. Plugin maven that compares and generates report</listitem>
			</itemizedlist>
			To add custom steps it is enough to add a new dependency to pom.xml into tag dependencies like below:
		</para>
		<programlisting><![CDATA[<dependency>
    <groupId>br.gov.frameworkdemoiselle.component.behave</groupId>
    <artifactId>demoiselle-behave-regression-step</artifactId>
    <scope>test</scope>
</dependency>]]></programlisting>
		<para>
			Other configuration is inclusion of maven plugin inside tag build/plugins like below:
		</para>
		<programlisting><![CDATA[<build>
    <plugins>
        <plugin>
            <groupId>br.gov.frameworkdemoiselle.component.behave</groupId>
            <artifactId>demoiselle-behave-regression-report</artifactId>
            <version>1.5.0</version>                
            <executions>
                <execution>
                    <phase>test</phase>
                    <goals>
                        <goal>regression</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build>]]></programlisting>
		</section>

		<section>
			<title>Configurations of behave.properties</title>
			<para>
				<para>For screenshots and report be generated some configurations are necessary into <citetitle>behave.properties</citetitle> </para>
			
				<itemizedlist>
					<listitem>
						General configuration
						<para>Property that enables feature of regression for dbehave.</para>
						<programlisting>behave.regression.enabled=true</programlisting>					

						<para>Property used by method RegressionConfig.getTypes() to do loop of tests running and report generation. They are browsers that will be used.</para>
						<programlisting>behave.regression.types=linux1204_Firefox30,linux1204_Chrome33,windows7_IE9,windows7_Chrome35</programlisting>
						
						<para>Property that defines browser used as reference for comparisons:</para>
						<programlisting>behave.regression.defaultType=linux1204_Firefox</programlisting>					
					</listitem>
					<listitem>
						Browsers configuration
						
						<para>For each browser listed in property <emphasis>behave.regression.types</emphasis> must exist a properties set that are defined with following pattern:</para>
						<programlisting>behave.regression.<citetitle>BROWSER_NAME</citetitle>.runner.<citetitle>PROPERTY</citetitle></programlisting>
						
						<tip>
							<para>
								Use a readable name that determine operating system and browser and their respective versions in <citetitle>BROWSER_NAME</citetitle> of properties, because this name will be used in
								comparison reports. 
							</para>
						</tip>
						
						<para>Below area possible properties to be used in configuration of each browser:</para>
						
						<itemizedlist>
							<listitem>...runner.screen.maxWait</listitem>
							<listitem>...runner.screen.minWait</listitem>
							<listitem>...runner.proxy.enabled</listitem>
							<listitem>...runner.proxy.url</listitem>
							<listitem>...runner.screen.driverPath</listitem>
							<listitem>...runner.profile.enabled</listitem>
							<listitem>...runner.screen.remote.url</listitem>
							<listitem>...runner.screen.remote.name</listitem>
							<listitem>...runner.screen.profilePath</listitem>
							<listitem>...runner.screen.binaryPath</listitem>
							<listitem>...runner.screen.type</listitem>
							<listitem>...runner.catchUIException</listitem>
							<listitem>...runner.window.maximize.enabled</listitem>
						</itemizedlist>
						
						<para>Example of browser configuration:</para>
						<programlisting>// Firefox browser in local machine
behave.regression.linux1204_Firefox30.runner.screen.type=MozillaFirefox
behave.regression.linux1204_Firefox30.runner.window.maximize.enabled=true

// Chrome browser in local machine
behave.regression.linux1204_Chrome33.runner.screen.type=GoogleChrome
behave.regression.linux1204_Chrome33.runner.window.maximize.enabled=true
behave.regression.linux1204_Chrome33.runner.screen.driverPath=//path//do//driver//chromedriver
	
// Internet Explorer 9 browser in remote machine
behave.regression.windows7_IE9.runner.screen.type=RemoteWeb
behave.regression.windows7_IE9.runner.window.maximize.enabled=true
behave.regression.windows7_IE9.runner.screen.remote.name=internetExplorer
behave.regression.windows7_IE9.runner.screen.remote.url=http://X.X.X.X:4444/wd/hub

// Chrome browser in remote machine
behave.regression.windows7_Chrome35.runner.screen.type=RemoteWeb
behave.regression.windows7_Chrome35.runner.window.maximize.enabled=true
behave.regression.windows7_Chrome35.runner.screen.remote.name=chrome
behave.regression.windows7_Chrome35.runner.screen.remote.url=http://X.X.X.X:4444/wd/hub</programlisting>					
					</listitem>
				</itemizedlist>
			</para>
		</section>
		
		<section>
			<title>Local Image Repository</title>
			<para>For local repository is used user home directory as default, for example, in Linux is used <citetitle>/home/USER_NAME/.dbehave/</citetitle>.</para>
			<para>Configuration is very simple, it is enough to select following property:</para>
			<programlisting>behave.regression.type=local</programlisting>
		</section>
		
		<!-- 
		<section>
			<title>Reposit√≥rio FTP de Imagens</title>
			<para>
			</para>
		</section>		
 		-->
	</section>	
	<section>
		<title>Comparison Points</title>
		<para>For new capture phrases work it is necessary to add steps to dbehave by following command:</para>		
		<programlisting>BehaveContext.getInstance().addSteps(new RegressionSteps());</programlisting>
		<para>For screens be captured it is enough to use one of following phrases:</para>
		<programlisting>When I get a screenshot
When I get a screenschot with name "SCREENSHOT NAME TO BE EXHIBITED IN REPORT"</programlisting>
	</section>	
	<section>
		<title>Running Regression Test</title>
		<para>
			Show maven command and console output and report.
			Final result will be created into folder <citetitle>/target/dbehave</citetitle> of your dbehave project.
			It is recommended that be created new JUnit methods with following code:		
		</para>		
		<programlisting>@Test // JUnit Annotation
public void testRegressaoLayout() throws Throwable {

    // Loop to rest all browsers
    for (String browser : RegressionConfig.getTypes()) {
        RegressionConfig.setCurrentType(browser);  // Select current browser

        eng.addStoriesReuse("/stories/XXXX.story"); // Reuse stories
        eng.addStories("/stories/XXXXX.story"); // Stories that will run

        eng.addSteps(new MySteps());  // Custom steps
        eng.addSteps(new RegressionSteps()); // Capture steps

        // Run test for current selected browser in setCurrentType
        eng.run();
    }

}</programlisting>
	</section>	
	<section>
		<title>Generated Report</title>
		<warning>
			<para>
				Report only will be generated if functional tests run successfully and when was executed via maven (mvn package), because report is generated by means of a plugin.
			</para>
		</warning>
		
		<para>Final report will be created into folder <citetitle>/target/dbehave</citetitle> of your project and will have following features.</para>
		
		<itemizedlist>
			<listitem>At first column will be displayed captured screen name text or provided name, depending on phrase was used.</listitem>
			<listitem>At second column is displayed captured reference image of reference browser.</listitem>
			<listitem>				
				In next columns will be displayed images and informations about browsers comparison
				<itemizedlist>
					<listitem>Former Image (selected option) of reference browser.</listitem>
					<listitem>Static Image that shows difference between browsers in red color.</listitem>
					<listitem>Dynamic Image that shows difference between browsers by means of a GIF that switch between browsers.</listitem>
					<listitem>Percentage of difference between browsers.</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
		
		<para>
			<mediaobject>
				<imageobject role="fo">
				<imagedata fileref="images/regression-report.png" align="center"
					format="PNG" scalefit="1" width="50%" />
			</imageobject>
			<imageobject role="html">
				<imagedata fileref="images/regression-report.png" align="center"
					format="PNG" scalefit="1" width="50%" />
			</imageobject>	
				<caption>
					<para>Sample of Layout Regression Test Report</para>
				</caption>
			</mediaobject>								
		</para>		
	</section>	
</chapter>
